Works like a smart pointer and templated to hold and object. 
Keeps track of the amount of references and deletes and invokes deconstructor of the internal object pointer
rsc pointers can have different strengths and it can change during its lifetime
A rsc made weak (m_strong = false) will not count to the reference count and allows the pointer to be deleted somwhere else and will not keep it alive.
A rsc made strong will actively count towards the reference count and will delete the internal pointer when the last strong pointer runs out of scope or gets removed

The reference count increases by copy
When assigning a rsc to an already existing one the previous one will be taken care of like it ran out of scope. The previous strength will be kept

Strength can either be specified in template or during runtime by makeStrong, makeWeak, and setStrength